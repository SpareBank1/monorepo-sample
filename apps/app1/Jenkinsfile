pipeline {
//    agent {
//         docker {
//             image 'docker.io/library/maven:3.6.1-jdk-8'
//         }
//     }

    agent any

    parameters {
        string(name: 'APP_PATH', defaultValue: 'apps/app1')
    }

    stages {
//         stage('Abort if there are no changes') {
//             when {
//                 allOf {
//                     expression {
//                         sh(returnStatus: true, script: 'git diff  origin/master --name-only | grep --quiet "^${APP_PATH}/.*"') == 0
//                     }
//                     expression {
//                         return !currentBuild.rawBuild.getCauses()[0].toString().contains('UserIdCause')
//                     }
//                     not { branch 'master' }
//                 }
//             }
//             steps {
//                 script {
//                     script {
//                         echo currentBuild.rawBuild.getCauses()[0].toString()
//                     }
//                     currentBuild.result = 'ABORTED'
//                     error("Aborting the build.")
//                 }
//             }
//         }

        stage('Build app1') {
//             when {
//                 changeset "**/apps/app1/*.*"
//                 beforeAgent true
//             }
            steps {
                githubNotify status: 'PENDING', description: "BUILD $BUILD_ID has started", context: 'jenkins/build/app1',
                                              targetUrl: "$BUILD_URL", credentialsId: 'monorepo-dsl',
                                              account: 'kirill-kosenko', repo: 'monorepo-sample', sha: "${env.GIT_COMMIT}"
//                 agent any

//                 script {
//                     echo currentBuild.rawBuild.getCauses()[0].toString()
//                 }
                sh "mvn -f apps/app1/pom.xml clean install"
            }

            post {
                success {
                    githubNotify status: 'SUCCESS', description: "BUILD $BUILD_ID has finished", context: 'jenkins/build/app1',
                                 targetUrl: "$BUILD_URL", credentialsId: 'monorepo-dsl',
                                 account: 'kirill-kosenko', repo: 'monorepo-sample', sha: "${env.GIT_COMMIT}"
                }

                unsuccessful {
                    githubNotify status: 'ERROR', description: "BUILD $BUILD_ID has failed", context: 'jenkins/build/app1',
                                 targetUrl: "$BUILD_URL", credentialsId: 'monorepo-dsl',
                                 account: 'kirill-kosenko', repo: 'monorepo-sample', sha: "${env.GIT_COMMIT}"
                }
            }
        }

    }
}
