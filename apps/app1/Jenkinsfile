pipeline {
//    agent {
//         docker {
//             image 'docker.io/library/maven:3.6.1-jdk-8'
//         }
//     }

    agent any

    parameters {
        string(name: 'APP_PATH', defaultValue: 'apps/app1')
    }

    stages {
        stage('Abort if there are no changes') {
            when {
                allOf {
                    expression {
                        sh(returnStatus: true, script: 'git diff  origin/master --name-only | grep --quiet "^${APP_PATH}/.*"') != 0
                    }
//                     expression {
//                         return !currentBuild.rawBuild.getCauses()[0].toString().contains('UserIdCause')
//                     }
                    not { branch 'master' }
                }
            }
            steps {
                script {
                    script {
                        echo currentBuild.rawBuild.getCauses()[0].toString()
                    }
                    currentBuild.result = 'ABORTED'
                    error("Aborting the build.")
                }
            }
        }

        stage('Build app1') {
            steps {
                script {
                    echo currentBuild.rawBuild.getCauses()[0].toString()
                }
                sh 'mvn -f ${APP_PATH}/pom.xml clean install'
            }
        }

    }
}
